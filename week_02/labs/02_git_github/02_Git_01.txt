1 - Complete git tutorial here: https://try.github.io/
RAS: Have done the first few levels. Stopped at relative references

2 - Create Github account if you have not already done so.
RAS: Done

There are two main ways in which you get started working with a git repository on your local machine. The first is to initialize a folder, or a project, as a new git repository. This creates the .git folder in the project that tracks all of the git functionality. The second way is to clone an existing repository from Github onto your machine.

3 - Cloning repository from Github:
	- create a new folder in your CodingNomads folder called "clone_wars"
	- clone the following repository into "clone_wars": https://github.com/martin-martin/clone-test
	- through Github's website, create a new repository with the same name as the repository that you cloned
	- add a new remote to your local git repository that points to the repo that you just created on your own Github
	- push the local repository to your Github repository
	- visit the Github repo to make sure the contents were pushed

RAS: This text is phrased in a way that is very hard for me to understand. I chatted to Martin about it and have done a clone and push to a new github repo here, which was the intent we think: https://github.com/bliiir/labs_week_02_test_repository.

4 - Initializing a new git repository:
	- in your CodingNomads folder, create new folder git_practice
    - inside git_practice:
        - initialize folder as a git folder (make sure you are in the correct folder when initializing)
        - make new file
        - add file
        - commit file
        - on Github, create new git_practice repository
        - add remote that points to the Github repository
        - push committed file to Github
        - practice the following git flow until you feel comfortable:
            - Create or modify file
            - Add file(s)
            - Commit file(s)
            - Push file(s) to Github repository

RAS: This sequence creates two unrelated stories if a README.md file is created when creating the git_practice on Github. When pushing/pulling git refuses to merge them. This can be fixed using the  --allow-unrelated-histories parameters, but would be more elegantly handled by making it clear that no README.md file should be created when creating the remote.

5 - More practice cloning
	- spend some time looking at the repositories on Github
	- find three projects that interest you and clone them to your local machine (in a new folder inside of CodingNomads)
	- create repositories on your Github for each project
	- add remotes to each local repo
	- push each repo to your Github

RAS: This only works if I rm the .git folder that comes with the clone and then push to the new repo I made because the reference to the original remote comes with the clone. Have invited you guys as collaborators to show it worked.

The three repos:
https://github.com/bliiir/re2
https://github.com/bliiir/python-binance
https://github.com/bliiir/binance-official-api-docs




